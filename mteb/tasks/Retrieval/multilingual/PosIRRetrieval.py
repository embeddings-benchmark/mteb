from __future__ import annotations

from collections import defaultdict

from datasets import load_dataset

from mteb.abstasks.AbsTaskRetrieval import AbsTaskRetrieval
from mteb.abstasks.MultilingualTask import MultilingualTask
from mteb.abstasks.TaskMetadata import TaskMetadata

_POSIR_METADATA = {
    "dataset": {
        "path": "infgrad/PosIR-Benchmark-v1",
        "revision": "8faa66a19e4b2cf5764bc2e2adb19e9eca503d63",
    },
    "type": "Retrieval",
    "category": "s2p",
    "reference": "https://huggingface.co/datasets/infgrad/PosIR-Benchmark-v1",
    "eval_splits": ["test"],
    "eval_langs": {"cmn-Hans": ["cmn-Hans"], "eng-Latn": ["eng-Latn"]},
    "main_score": "ndcg_at_10",
    "date": ("2025-03-04", "2025-08-20"),
    "task_subtypes": ["Article retrieval"],
    "license": "mit",
    "annotations_creators": "LM-generated and reviewed",
    "dialect": [],
    "sample_creation": "LM-generated and verified",
    "prompt": {
        "query": "Given a web search query, retrieve relevant passages that answer the query",
        "document": "",
    },
    "modalities": ["text"],
    "bibtex_citation": r"""
@misc{zeng2025empiricalstudypositionbias,
  archiveprefix = {arXiv},
  author = {Ziyang Zeng and Dun Zhang and Jiacheng Li and Panxiang Zou and Yuqing Yang},
  eprint = {2505.13950},
  primaryclass = {cs.IR},
  title = {An Empirical Study of Position Bias in Modern Information Retrieval},
  url = {https://arxiv.org/abs/2505.13950},
  year = {2025},
}
""",
}

_COMMON_DESCRIPTION_SUFFIX = (
    "Its passages are sampled directly from this subset. Queries are synthetically generated by LLMs, covering a range of types "
    "including 'what', 'how', 'why', 'where', 'when', as well as summarization and boolean questions."
)


# load data function
def _load_data(
    path: str,
    langs: list,
    split: str,
    industry_domain: str,
    cache_dir: str = None,
    revision: str = None,
):
    queries = defaultdict(dict)
    corpus = defaultdict(dict)
    relevant_docs = defaultdict(dict)

    for lang in langs:
        # load queries data
        data = load_dataset(
            path,
            data_files=f"{lang}/{industry_domain}/queries.parquet",
            cache_dir=cache_dir,
            revision=revision,
        )

        queries[lang][split] = {item["_id"]: item["text"] for item in data["train"]}

        # get corpus
        data = load_dataset(
            path,
            data_files=f"{lang}/{industry_domain}/corpus.parquet",
            cache_dir=cache_dir,
            revision=revision,
        )
        corpus[lang][split] = {item["_id"]: item for item in data["train"]}

        # get relevant_docs
        data = load_dataset(
            path,
            name=f"{lang}-{industry_domain}",
            split=split,
            cache_dir=cache_dir,
            revision=revision,
        )
        # the qrels contain all labels, we only use the selected labels
        relevant_docs[lang][split] = {
            item["query-id"]: {item["corpus-id"]: 1}
            for item in data
            if item["query-id"] in queries[lang][split]
        }

    return corpus, queries, relevant_docs


# Common load_data method for all PosIR classes
def _common_load_data(self, **kwargs):
    if self.data_loaded:
        return
    self.corpus, self.queries, self.relevant_docs = _load_data(
        path=self.metadata.dataset["path"],
        langs=self.hf_subsets,
        split=self.metadata.eval_splits[0],
        industry_domain=self._industry_domain,
        cache_dir=kwargs.get("cache_dir", None),
        revision=self.metadata.dataset["revision"],
    )
    self.data_loaded = True


# 31 test sets
class PosIRAccommodationCateringHotelRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "accommodation_catering_hotel"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRAccommodationCateringHotelRetrieval",
        domains=["Written"],
        description=(
            "This test set is based on the accommodation_catering_hotel subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRAerospaceRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "aerospace"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRAerospaceRetrieval",
        domains=["Engineering", "Written"],
        description=(
            "This test set is based on the aerospace subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRAgricultureForestryAnimalHusbandryFisheryRetrieval(
    MultilingualTask, AbsTaskRetrieval
):
    _industry_domain = "agriculture_forestry_animal_husbandry_fishery"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRAgricultureForestryAnimalHusbandryFisheryRetrieval",
        domains=["Written"],
        description=(
            "This test set is based on the agriculture_forestry_animal_husbandry_fishery subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRArtificialIntelligenceMachineLearningRetrieval(
    MultilingualTask, AbsTaskRetrieval
):
    _industry_domain = "artificial_intelligence_machine_learning"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRArtificialIntelligenceMachineLearningRetrieval",
        domains=["Academic", "Written"],
        description=(
            "This test set is based on the artificial_intelligence_machine_learning subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRAutomobileRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "automobile"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRAutomobileRetrieval",
        domains=["Engineering", "Written"],
        description=(
            "This test set is based on the automobile subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRBiomedicineRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "biomedicine"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRBiomedicineRetrieval",
        domains=["Medical", "Written"],
        description=(
            "This test set is based on the biomedicine subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRComputerCommunicationRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "computer_communication"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRComputerCommunicationRetrieval",
        domains=["Web", "Written"],
        description=(
            "This test set is based on the computer_communication subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRComputerProgrammingCodeRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "computer_programming_code"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRComputerProgrammingCodeRetrieval",
        domains=["Programming"],
        description=(
            "This test set is based on the computer_programming_code subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRCurrentAffairsGovernmentAdministrationRetrieval(
    MultilingualTask, AbsTaskRetrieval
):
    _industry_domain = "current_affairs_government_administration"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRCurrentAffairsGovernmentAdministrationRetrieval",
        domains=["News", "Government"],
        description=(
            "This test set is based on the current_affairs_government_administration subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRElectricPowerEnergyRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "electric_power_energy"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRElectricPowerEnergyRetrieval",
        domains=["Engineering", "Written"],
        description=(
            "This test set is based on the electric_power_energy subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRFilmEntertainmentRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "film_entertainment"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRFilmEntertainmentRetrieval",
        domains=["Entertainment", "Written"],
        description=(
            "This test set is based on the film_entertainment subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRFinanceEconomicsRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "finance_economics"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRFinanceEconomicsRetrieval",
        domains=["Financial", "Written"],
        description=(
            "This test set is based on the finance_economics subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRFinewebRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "fineweb"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRFinewebRetrieval",
        domains=["Encyclopaedic", "Web", "Written"],
        description=(
            "This test set is based on the fineweb dataset. "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRFireSafetyFoodSafetyRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "fire_safety_food_safety"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRFireSafetyFoodSafetyRetrieval",
        domains=["Written"],
        description=(
            "This test set is based on the fire_safety_food_safety subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRGameRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "game"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRGameRetrieval",
        domains=["Entertainment", "Written"],
        description=(
            "This test set is based on the game subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRLawJudiciaryRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "law_judiciary"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRLawJudiciaryRetrieval",
        domains=["Legal", "Written"],
        description=(
            "This test set is based on the law_judiciary subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRLiteratureEmotionRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "literature_emotion"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRLiteratureEmotionRetrieval",
        domains=["Fiction"],
        description=(
            "This test set is based on the literature_emotion subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRMathematicsStatisticsRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "mathematics_statistics"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRMathematicsStatisticsRetrieval",
        domains=["Academic", "Written"],
        description=(
            "This test set is based on the mathematics_statistics subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRMedicineHealthPsychologyTraditionalChineseMedicineRetrieval(
    MultilingualTask, AbsTaskRetrieval
):
    _industry_domain = "medicine_health_psychology_traditional_chinese_medicine"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRMedicineHealthPsychologyTraditionalChineseMedicineRetrieval",
        domains=["Medical", "Written"],
        description=(
            "This test set is based on the medicine_health_psychology_traditional_chinese_medicine subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRMiningRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "mining"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRMiningRetrieval",
        domains=["Engineering", "Written"],
        description=(
            "This test set is based on the mining subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRNewsMediaRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "news_media"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRNewsMediaRetrieval",
        domains=["News", "Written"],
        description=(
            "This test set is based on the news_media subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIROtherInformationServicesInformationSecurityRetrieval(
    MultilingualTask, AbsTaskRetrieval
):
    _industry_domain = "other_information_services_information_security"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIROtherInformationServicesInformationSecurityRetrieval",
        domains=["Web", "Written"],
        description=(
            "This test set is based on the other_information_services_information_security subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIROtherManufacturingRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "other_manufacturing"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIROtherManufacturingRetrieval",
        domains=["Engineering", "Written"],
        description=(
            "This test set is based on the other_manufacturing subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRPetrochemicalRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "petrochemical"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRPetrochemicalRetrieval",
        domains=["Chemistry", "Written"],
        description=(
            "This test set is based on the petrochemical subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRRealEstateConstructionRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "real_estate_construction"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRRealEstateConstructionRetrieval",
        domains=["Engineering", "Constructed", "Written"],
        description=(
            "This test set is based on the real_estate_construction subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRSportsRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "sports"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRSportsRetrieval",
        domains=["Entertainment", "Written"],
        description=(
            "This test set is based on the sports subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRSubjectEducationEducationRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "subject_education_education"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRSubjectEducationEducationRetrieval",
        domains=["Academic", "Written"],
        description=(
            "This test set is based on the subject_education_education subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRTechnologyScientificResearchRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "technology_scientific_research"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRTechnologyScientificResearchRetrieval",
        domains=["Academic", "Written"],
        description=(
            "This test set is based on the technology_scientific_research subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRTourismGeographyRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "tourism_geography"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRTourismGeographyRetrieval",
        domains=["Written"],
        description=(
            "This test set is based on the tourism_geography subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRTransportationRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "transportation"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRTransportationRetrieval",
        domains=["Written"],
        description=(
            "This test set is based on the transportation subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data


class PosIRWaterResourcesOceanRetrieval(MultilingualTask, AbsTaskRetrieval):
    _industry_domain = "water_resources_ocean"
    metadata = TaskMetadata(
        **_POSIR_METADATA,
        name="PosIRWaterResourcesOceanRetrieval",
        domains=["Written"],
        description=(
            "This test set is based on the water_resources_ocean subset of the BAAI/IndustryCorpus2 sampled from NLP pre-trained corpora (such as WuDaoCorpora, redpajama, and SkyPile-150B, among others). "
            + _COMMON_DESCRIPTION_SUFFIX
        ),
    )

    load_data = _common_load_data
