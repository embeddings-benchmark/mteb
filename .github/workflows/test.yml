# This workflow will:
# 1) install Python dependencies
# 2) run make test


name: Test
on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] #, macos-latest, windows-latest]
        python-version: ["3.8.18", "3.9.19", "3.10.14"]
        include:
          # Add Windows with Python 3.8 only to avoid tests taking too long
          - os: windows-latest
            python-version: "3.8.10"

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      
      - name: Restore pip packages cache
        uses: actions/cache@v4
        id: pip-cache
        with:
          path: /opt/hostedtoolcache/Python/3.8.18/x64/site-packages
          key: test-packages-${{ hashFiles('pyproject.toml') }}
          restore-keys: test-packages-

      - name: Install dependencies
        if: steps.pip-cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          make install-for-tests

      - name: Run tests
        if: runner.os != 'Windows'
        shell: bash
        run: |
          make test

      - name: Run tests on Windows
        # Run tests on Windows
        # this step will run the workflow twice since we have experienced
        # failures when running on windows when loading the datasets
        if: runner.os == 'Windows'
        shell: bash
        run: |
          # run the test once and if it fails, run it again
          # if it fails again, the workflow will fail.
          # If it passes the first time the test will not run again
          make test || make test

